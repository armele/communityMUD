from django.db import models
from evennia.utils.idmapper.models import SharedMemoryModel
from evennia.accounts.models import AccountDB
from django.conf import settings

# Create your models here.
class QuestEntry(SharedMemoryModel):
    """
    Stores structured quest data generated by the LLM, whether pending or built.
    """

    QUEST_STATUS_CHOICES = [
        ("pending", "Pending"),
        ("building", "Building"),
        ("built", "Built"),
        ("failed", "Failed"),
        ("abandoned", "Abandoned")
    ]

    quest_id = models.CharField(max_length=64, unique=True)
    title = models.CharField(max_length=255)
    status = models.CharField(max_length=20, choices=QUEST_STATUS_CHOICES, default="pending")
    triggered_by = models.ForeignKey(
        AccountDB,
        on_delete=models.SET_NULL,
        null=True,
        blank=True,
        related_name="generated_quests"
    )
    timestamp_created = models.DateTimeField(auto_now_add=True)
    last_updated = models.DateTimeField(auto_now=True)

    # Store the full structured LLM output
    raw_data = models.JSONField()

    def __str__(self):
        return f"[{self.status}] {self.title} ({self.quest_id})"



class QuestProgress(SharedMemoryModel):
    STATUS_CHOICES = [
        ("in_progress", "In Progress"),
        ("complete", "Complete"),
        ("failed", "Failed"),
        ("abandoned", "Abandoned"),
    ]

    quest = models.ForeignKey(QuestEntry, on_delete=models.CASCADE)
    character = models.ForeignKey("objects.ObjectDB", on_delete=models.CASCADE)
    started = models.DateTimeField(auto_now_add=True)
    completed = models.DateTimeField(null=True, blank=True)
    current_step = models.CharField(max_length=255, blank=True)
    status = models.CharField(max_length=20, choices=STATUS_CHOICES, default="in_progress")

    def __str__(self):
        return f"{self.character.key} - {self.quest.title} ({self.status})"
